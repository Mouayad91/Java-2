#BlueJ class context
comment0.target=Lager
comment0.text=\r\n\ Eine\ Klasse,\ die\ ein\ Lager\ und\ Artikeln\ erstellt,\ und\ mit\ mehrere\ Methoden\ bearbeitet\r\n\r\n\ @author\ Monzr\ Hajy\ Omar\ und\ Mouayad\ Haji\ Omar\ \r\n\ \r\n\ @version\ 1.0\r\n
comment1.params=lagergroesse
comment1.target=Lager(int)
comment1.text=\r\n\ Hier\ wird\ die\ gr\u00F6\u00DFe\ des\ Lagers\ eingegeben.\r\n\ \r\n\ @param\ lagergroesse\ Anzahl\ der\ m\u00F6glichen\ freien\ Pl\u00E4tze\ im\ Lager\r\n
comment10.params=prozent
comment10.target=void\ aenderePreisAllerArtikel(double)
comment10.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ den\ Preis\ aller\ Artikeln\ \u00E4ndern.\r\n\ \r\n\ @param\ prozent\ um\ den\ Preis\ alle\ Artikel\ zu\ \u00E4ndern\r\n
comment11.params=artikelNr\ array
comment11.target=Artikel\ matchAndFind(int,\ Artikel[])
comment11.text=\r\n\ Hier\ wird\ einen\ Artikel\ mit\ Hilfe\ der\ eingegebene\ Artikelnummer\ gefunden.\r\n\ \r\n\ @param\ artikelNr,\ array\ um\ einen\ Artikel\ zu\ finden\r\n
comment12.params=index
comment12.target=Artikel\ getArtikel(int)
comment12.text=\r\n\ Hier\ wird\ einen\ Artikel\ im\ Lager\ ermittelt.\r\n\ \r\n\ @param\ index\ um\ den\ Artikel\ im\ Lager\ zu\ finden\r\n
comment13.params=
comment13.target=int\ getArtikelAnzahl()
comment13.text=\r\n\ Hier\ wird\ die\ Anzahl\ der\ angelegte\ Artikel\ gegeben.\r\n\ \r\n\ @return\ counter\ um\ die\ Anzahl\ der\ angelegte\ Artikel\ zu\ rechnen\r\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\r\n\ Methode\ gibt\ Artikelnummer,\ Artikelart,\ Bestand\ und\ Preis\ eines/alle\ Artikels\ zur\u00FCck.\r\n\ \r\n\ @return\ lager\ der\ Attribute\ artikelnr,\ art,\ bestand\ und\ preis\ von\ aller\ angelegte\ Artikeln\r\n
comment15.params=
comment15.target=int\ getAnzahlLeerePlaetzeImLager()
comment15.text=\r\n\ Hier\ wird\ die\ Anzahl\ der\ verf\u00FCgbare\ freie\ Pl\u00E4tze\ im\ Lager\ gegeben.\r\n\ \r\n\ @return\ Anzahl\ der\ freie\ Pl\u00E4tze\ im\ Lager\r\n
comment16.params=
comment16.target=int\ getLagerGroesse()
comment16.text=\r\n\ Hier\ wird\ die\ gr\u00F6\u00DFe\ des\ Lagers\ gegeben.\r\n\ \r\n\ @return\ die\ gr\u00F6\u00DFe\ des\ Lagers\r\n
comment17.params=
comment17.target=java.lang.String\ ausgebenBestandsListe()
comment17.text=\r\n\ Methode\ gibt\ alle\ Informationen\ von\ den\ angelegten\ Artikeln\ als\ String\ Text\ zur\u00FCck.\r\n\ \r\n\ @return\ lager\ als\ Text\ aus\ den\ Attribute\ artikelNr,\ art/Beschreibung\ ,\ bestand,\ preis\ und\ gesamt\ von\ aller\ angelegten\ Artikeln\r\n
comment18.params=predicate
comment18.target=Artikel[]\ getSorted(java.util.function.BiPredicate)
comment18.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ die\ Artikel\ im\ Lager\ nach\ bestimmte\ Kriterium\ sortieren\ und\ ausgeben.\r\n\ \r\n\ @param\ predicate,\ um\ die\ Kriterium\ einzugeben\r\n\ @return\ sortArray\ das\ sortierte\ Array\ von\ Artikel\r\n
comment19.params=function
comment19.target=void\ applyToArticles(java.util.function.Consumer)
comment19.text=\r\n\ Hier\ wird\ eine\ eingegebene\ Funktion\ auf\ alle\ Artikel\ ausgef\u00FChrt.\r\n\ \r\n\ @param\ function\ eine\ Funktion\r\n
comment2.params=
comment2.target=Lager()
comment2.text=\r\n\ Hier\ wird\ die\ gr\u00F6\u00DFe\ des\ Lagers\ mit\ den\ Maximalen\ Wert\ 10\ eingegeben.\r\n
comment20.params=predicate
comment20.target=java.util.List\ filter(java.util.function.Predicate)
comment20.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ die\ Artikel\ im\ Lager\ nach\ bestimmte\ Bedingung\ filtern\ und\ ausgeben.\r\n\ \r\n\ @param\ predicate,\ um\ die\ Bedingung\ einzugeben\r\n\ @return\ artikelList\ eine\ Liste\ von\ gefilterte\ Artikel,\ hier\ kein\ Array\ als\ return\ damit\ wir\ kein\ null\ werte\ zur\u00FCckbekommen.\r\n
comment21.params=operation\ predicate
comment21.target=void\ applyToSomeArticles(LagerInterface,\ java.util.function.Predicate)
comment21.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ eine\ Bestimmte\ Operation\ auf\ bestimmte\ Artikel\ im\ Lager\ ausf\u00FChren.\r\n\ \r\n\ @param\ predicate,\ um\ die\ Bedingung\ einzugeben\r\n\ @param\ operation\ hier\ ein\ Lambda-Ausdr\u00FCck\ einzugeben\r\n
comment22.params=artikel\ art
comment22.target=void\ setArtikelArt(Artikel,\ java.lang.String)
comment22.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ den\ Art\ eines\ Artikels\ neusetzen.\ Dieser\ implementierung\ ist\ notwendig\ f\u00FCr\ das\ FunctionalInterface\ des\ Lager\ und\ f\u00FCr\ die\ Methode\ applyToSomeArticles.\r\n\ \r\n\ @param\ artikel\ \r\n\ @param\ art\ Art\ des\ Artikels\r\n
comment23.params=predicate\ biPredicate
comment23.target=java.util.List\ getArticles(java.util.function.Predicate,\ java.util.function.BiPredicate)
comment23.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ eine\ Liste\ von\ bestimmte\ Artikeln,\ die\ eine\ betimmte\ Bedingung\ erf\u00FCllen\ und\ sortiert\ in\ der\ Liste\ nach\ bestimmte\ Kriterium.\r\n\ \r\n\ @param\ predicate,\ um\ die\ Bedingung\ einzugeben\r\n\ @param\ biPredicate\ Sortkriterium\ in\ der\ Liste\r\n\ @return\ artikelList\ eine\ Sortiertierte\ und\ gefilterte\ Liste\r\n
comment24.params=parameterliste
comment24.target=Artikel[]\ filterAll(java.util.List)
comment24.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ eine\ Liste\ von\ bestimmte\ Artikeln,\ die\ eine\ oder\ mehrere\ Bedingungen\ bzw.\ Kriterien\ erf\u00FCllen.\ Maximum\ 3\ Kriterien\ k\u00F6nnen\ eingegeben.\r\n\ @param\ parameterliste,\ um\ die\ Kriterien\ als\ List\ einzugeben\r\n\ @return\ artikelList\ eine\ gefilterte\ Liste\ nach\ verschiedene\ Kriterien\r\n
comment25.params=args
comment25.target=void\ main(java.lang.String[])
comment25.text=\r\n\ Main-Methode\ der\ Klasse,\ hier\ werden\ mehrere\ Methoden\ des\ Programms\ getestet.\ Jeder\ aufgabe\ ist\ geteilt\ durch\ ein\ "----."\ String.\r\n\ \r\n\ @param\ args\r\n
comment3.params=artikel
comment3.target=void\ legeAnArtikel(Artikel)
comment3.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ ein\ neuen\ Arikel\ ins\ Lagen\ anlegen.\r\n\ \r\n\ @param\ artikel\ zum\ erstellen\ eines\ Artikels\r\n
comment4.params=
comment4.target=boolean\ isFull()
comment4.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ \u00FCberpr\u00FCfen,\ ob\ das\ Lager\ voll\ ist\ oder\ nicht.\r\n
comment5.params=
comment5.target=boolean\ isEmpty()
comment5.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ \u00FCberpr\u00FCfen,\ ob\ das\ Lager\ leer\ ist\ oder\ nicht.\r\n
comment6.params=artikelNr
comment6.target=void\ entferneArtikel(int)
comment6.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ einen\ Arikel\ im\ Lagen\ entfernen.\r\n\ \r\n\ @param\ artikelNr\ um\ einen\ Artikel\ zu\ suchen\r\n
comment7.params=artikelNr\ zugang
comment7.target=void\ bucheZugang(int,\ int)
comment7.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ den\ Bestand\ eines\ ausgew\u00E4hltes\ Artikels\ erh\u00F6hen.\r\n\ \r\n\ @param\ artikelNr,\ zugang\ um\ einen\ Artikel\ zu\ suchen\ und\ den\ Bestand\ zu\ erh\u00F6hen\r\n
comment8.params=artikelNr\ abgang
comment8.target=void\ bucheAbgang(int,\ int)
comment8.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ den\ Bestand\ eines\ ausgew\u00E4hltes\ Artikels\ verringern.\r\n\ \r\n\ @param\ artikelNr,\ abgang\ um\ einen\ Artikel\ zu\ suchen\ und\ den\ Bestand\ zu\ verringern\r\n
comment9.params=artikelNr\ prozent
comment9.target=void\ aenderePreisEinesArtikels(int,\ double)
comment9.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ den\ Preis\ eines\ ausgew\u00E4hltes\ Artikels\ \u00E4ndern.\r\n\ \r\n\ @param\ artikelNr,\ prozent\ um\ einen\ Artikel\ zu\ suchen\ und\ den\ Preis\ zu\ \u00E4ndern\r\n
numComments=26
