#BlueJ class context
comment0.target=Lagerdialog
comment0.text=\r\n\ Programm\ zum\ erstellen\ und\ bearbeiten\ von\ Artikeln\ in\ einem\ Lager.\r\n\ \r\n\ @author\ Monzr\ Hajy\ Omar\ und\ Mouayad\ Haji\ Omar\r\n\ \r\n\ @version\ 1.0\r\n
comment1.params=
comment1.target=int\ einleseFunktion()
comment1.text=\r\n\ Die\ Funktionen\ werden\ hier\ angezeigt.\r\n\ \r\n\ @return\ Eingabe\ vom\ Benutzer\ als\ Ganzzahl\r\n
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment10.text=\r\n\ Die\ Main\ Methode\ der\ Klasse.\r\n\ \r\n\ @param\ args\r\n
comment2.params=
comment2.target=int\ getInput()
comment2.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ eine\ Zahl/Wert\ von\ Datentyp\ Integer\ f\u00FCr\ Input\ eingeben.\r\n\ \r\n\ @return\ input\ vom\ Benutzer\ als\ Ganzzahl\r\n
comment3.params=funktion
comment3.target=void\ funktionAusw\u00E4hlen(int)
comment3.text=\r\n\ Hier\ wird\ abh\u00E4ngig\ vom\ benutzer\ eine\ Funktion\ ausgew\u00E4hlt\ und\ die\ richtige\ Methode\ ausgef\u00FChrt.\r\n\ \r\n\ @param\ funktion\ Befehl\ des\ benutzer\r\n
comment4.params=
comment4.target=java.util.function.BiPredicate\ sortKriterium()
comment4.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ eine\ die\ eine\ betimmte\ Kriterium\ als\ Lambda-Ausdruck\ zur\u00FCckbekommen.\ Die\ Kriterium/Kriterien\ ist/sind\ mehrmals\ in\ der\ Dilog-Klasse\ verwendet,\ dadurch\ ist\ diese\ Methode\ hier\ notwendig.\r\n\ \r\n\ @return\ BiPredicate<Artikel,Artikel>\ ein\ Lambda-Ausdruck\ des\ Interfaces\ BiPredicate.\r\n
comment5.params=wahl
comment5.target=java.util.function.Predicate\ prediacteWaehlen(int)
comment5.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ eine\ die\ eine\ betimmte\ Bedingung\ als\ Lambda-Ausdruck\ zur\u00FCckbekommen.\ Ist\ notwendig\ f\u00FCr\ die\ Dialog-Klasse,\ denn\ es\ mehrere\ Funktionen\ gibt,\ die\ mit\ solche\ Lambda-Ausdr\u00FCcke\ arbeiten.\r\n\ \r\n\ @param\ wahl,\ um\ ein\ lambda\ Ausdruck\ auszuw\u00E4hlen.\r\n\ @return\ Predicate<Artikel>\ ein\ Lambda-Ausdruck\ des\ Interfaces\ Predicate.\r\n
comment6.params=
comment6.target=LagerInterface\ operation()
comment6.text=\r\n\ Mit\ dieser\ Methode\ kann\ man\ eine\ die\ eine\ betimmte\ Operation\ als\ Lambda-Ausdruck\ zur\u00FCckbekommen.\ Ist\ notwendig\ f\u00FCr\ die\ Dialog-Klasse,\ denn\ es\ mehrere\ Funktionen\ gibt,\ die\ mit\ solche\ Lambda-Ausdr\u00FCcke\ arbeiten.\r\n\ \r\n\ @return\ LagerInterface\ ein\ Lambda-Ausdruck.\r\n
comment7.params=
comment7.target=void\ check()
comment7.text=\r\n\ Mit\ dieser\ Methode\ wird\ eine\ Exception\ getestet\ und\ mehrmals\ in\ der\ Dialod-Klasse\ verwendet.\r\n
comment8.params=
comment8.target=void\ check2()
comment8.text=\r\n\ Mit\ dieser\ Methode\ wird\ eine\ Exception\ getestet\ und\ mehrmals\ in\ der\ Dialod-Klasse\ verwendet.\r\n
comment9.params=
comment9.target=void\ start()
comment9.text=\r\n\ Die\ Hauptschleife\ des\ Programms.\r\n
numComments=11
